/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as PaymentSuccessImport } from './routes/paymentSuccess'
import { Route as PaymentCancelImport } from './routes/paymentCancel'
import { Route as LoginImport } from './routes/login'
import { Route as CreateImport } from './routes/create'
import { Route as IndexImport } from './routes/index'
import { Route as ExperiencesIndexImport } from './routes/experiences.index'
import { Route as ExperiencesExperienceIdImport } from './routes/experiences/$experienceId'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PaymentSuccessRoute = PaymentSuccessImport.update({
  id: '/paymentSuccess',
  path: '/paymentSuccess',
  getParentRoute: () => rootRoute,
} as any)

const PaymentCancelRoute = PaymentCancelImport.update({
  id: '/paymentCancel',
  path: '/paymentCancel',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoute = CreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExperiencesIndexRoute = ExperiencesIndexImport.update({
  id: '/experiences/',
  path: '/experiences/',
  getParentRoute: () => rootRoute,
} as any)

const ExperiencesExperienceIdRoute = ExperiencesExperienceIdImport.update({
  id: '/experiences/$experienceId',
  path: '/experiences/$experienceId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/paymentCancel': {
      id: '/paymentCancel'
      path: '/paymentCancel'
      fullPath: '/paymentCancel'
      preLoaderRoute: typeof PaymentCancelImport
      parentRoute: typeof rootRoute
    }
    '/paymentSuccess': {
      id: '/paymentSuccess'
      path: '/paymentSuccess'
      fullPath: '/paymentSuccess'
      preLoaderRoute: typeof PaymentSuccessImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/experiences/$experienceId': {
      id: '/experiences/$experienceId'
      path: '/experiences/$experienceId'
      fullPath: '/experiences/$experienceId'
      preLoaderRoute: typeof ExperiencesExperienceIdImport
      parentRoute: typeof rootRoute
    }
    '/experiences/': {
      id: '/experiences/'
      path: '/experiences'
      fullPath: '/experiences'
      preLoaderRoute: typeof ExperiencesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/paymentCancel': typeof PaymentCancelRoute
  '/paymentSuccess': typeof PaymentSuccessRoute
  '/profile': typeof ProfileRoute
  '/experiences/$experienceId': typeof ExperiencesExperienceIdRoute
  '/experiences': typeof ExperiencesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/paymentCancel': typeof PaymentCancelRoute
  '/paymentSuccess': typeof PaymentSuccessRoute
  '/profile': typeof ProfileRoute
  '/experiences/$experienceId': typeof ExperiencesExperienceIdRoute
  '/experiences': typeof ExperiencesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/login': typeof LoginRoute
  '/paymentCancel': typeof PaymentCancelRoute
  '/paymentSuccess': typeof PaymentSuccessRoute
  '/profile': typeof ProfileRoute
  '/experiences/$experienceId': typeof ExperiencesExperienceIdRoute
  '/experiences/': typeof ExperiencesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/login'
    | '/paymentCancel'
    | '/paymentSuccess'
    | '/profile'
    | '/experiences/$experienceId'
    | '/experiences'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/login'
    | '/paymentCancel'
    | '/paymentSuccess'
    | '/profile'
    | '/experiences/$experienceId'
    | '/experiences'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/login'
    | '/paymentCancel'
    | '/paymentSuccess'
    | '/profile'
    | '/experiences/$experienceId'
    | '/experiences/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoute: typeof CreateRoute
  LoginRoute: typeof LoginRoute
  PaymentCancelRoute: typeof PaymentCancelRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  ProfileRoute: typeof ProfileRoute
  ExperiencesExperienceIdRoute: typeof ExperiencesExperienceIdRoute
  ExperiencesIndexRoute: typeof ExperiencesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  LoginRoute: LoginRoute,
  PaymentCancelRoute: PaymentCancelRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  ProfileRoute: ProfileRoute,
  ExperiencesExperienceIdRoute: ExperiencesExperienceIdRoute,
  ExperiencesIndexRoute: ExperiencesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/login",
        "/paymentCancel",
        "/paymentSuccess",
        "/profile",
        "/experiences/$experienceId",
        "/experiences/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/paymentCancel": {
      "filePath": "paymentCancel.tsx"
    },
    "/paymentSuccess": {
      "filePath": "paymentSuccess.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/experiences/$experienceId": {
      "filePath": "experiences/$experienceId.tsx"
    },
    "/experiences/": {
      "filePath": "experiences.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
